# Base image for Node.js
FROM node:{{ nodejs_version }}-slim as build-stage

# Set a working directory
WORKDIR /app

# Copy package.json and package-lock.json
COPY package*.json ./

# Install dependencies
RUN npm install

# Copy the rest of the application source code
COPY . .

# Build the application for production
# This step can be adjusted or removed based on how you plan to use the container
# For instance, if the container is for development, you might want to run a development server instead
RUN npm run build

# For production, use an Nginx server to serve the static files
# This section can be omitted for development-focused Dockerfiles
FROM nginx:alpine as production-stage
COPY --from=build-stage /app/dist /usr/share/nginx/html
EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]

# For a development-focused Dockerfile, replace the second stage with:
# EXPOSE 3000
# CMD ["npm", "start"]
